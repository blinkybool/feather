"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[383],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=l(r),h=o,d=f["".concat(c,".").concat(h)]||f[h]||u[h]||a;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4914:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const a={sidebar_position:4},i="Why Use Feather?",s={unversionedId:"WhyUseFeather",id:"WhyUseFeather",title:"Why Use Feather?",description:"Feather is a great choice if one or more of the following is true:",source:"@site/docs/WhyUseFeather.md",sourceDirName:".",slug:"/WhyUseFeather",permalink:"/feather/docs/WhyUseFeather",draft:!1,editUrl:"https://github.com/blinkybool/feather/edit/main/docs/WhyUseFeather.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Optimising",permalink:"/feather/docs/Optimising"}},c={},l=[],p={toc:l};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"why-use-feather"},"Why Use Feather?"),(0,o.kt)("p",null,"Feather is a great choice if one or more of the following is true:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You can compute the configuration of those instances from some underlying state."),(0,o.kt)("li",{parentName:"ul"},"There are 100s, 1000s or 10,000s of instances to manage."),(0,o.kt)("li",{parentName:"ul"},"Memory efficiency is an important constraint."),(0,o.kt)("li",{parentName:"ul"},"Not every instance in the tree needs to be updated every update.\u2020")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"\u2020 This isn't because feather is too slow when every instance must be updated. Rather, you begin to hit a bottleneck in the Roblox Engine. For example, it just isn't possible to change the cframe of many thousands of parts every single frame without affecting performance, even with ",(0,o.kt)("a",{parentName:"p",href:"https://create.roblox.com/docs/reference/engine/classes/WorldRoot#BulkMoveTo"},"WorldRoot:BulkMoveTo()"),". This will depend on what instances you are using, and what properties you are setting.")),(0,o.kt)("p",null,"Feather was specifically designed for use with ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/metauni/metaboard"},"metaboard")," (it still uses Roact right now), to draw path-curves with parts. Each board can consist of 10-20,000 parts, and the contents of the board is a function of the curve data + recent edits (like erasing). The board gets updated as it is being written on, and ",(0,o.kt)("em",{parentName:"p"},"almost none")," of the existing curves are affected by these updates, so this can be detected with a Feather component to only trigger the necessary updates."))}u.isMDXComponent=!0}}]);